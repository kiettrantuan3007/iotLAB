# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import requests
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import time
import tkinter.messagebox

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\kiett\Desktop\iotLabPythonGUI\tkinter\output\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

import pyrebase

config = {
    "apiKey": "AIzaSyDd-1o1naDuO_GnaVnlizt96E9ab58eTY8",
    "authDomain": "iotprofinal.firebaseapp.com",
    "databaseURL": "https://iotprofinal-default-rtdb.firebaseio.com",
    "projectId": "iotprofinal",
    "storageBucket": "iotprofinal.appspot.com",
    "messagingSenderId": "309628910726",
    "appId": "1:309628910726:web:ebcf98bc00583387f32507",
    "measurementId": "G-LLM6DQBCFV"
}

firebase = pyrebase.initialize_app(config)
db = firebase.database()
oxygen_init = 0
quality_init = 0
pH_init = 0


def stream_handler(message):
    if type(message["data"]) == dict:
        canvas.itemconfig(data_Oxygen, text=message["data"]["Oxygen"])
        if (float(message["data"]["Oxygen"]) > 14) or (float(message["data"]["Oxygen"]) < 11):
            canvas.itemconfig(image_11, state="normal")
        else:
            canvas.itemconfig(image_11, state="hidden")
        canvas.itemconfig(data_Quality, text=message["data"]["Quality"])
        if (float(message["data"]["Quality"]) < 150) or (float(message["data"]["Quality"]) > 250):
            canvas.itemconfig(image_12, state="normal")
        else:
            canvas.itemconfig(image_12, state="hidden")
        canvas.itemconfig(data_pH, text=message["data"]["PH_value"])
        if (float(message["data"]["PH_value"]) > 9) or (float(message["data"]["PH_value"]) < 6.5):
            canvas.itemconfig(image_15, state="normal")
        else:
            canvas.itemconfig(image_15, state="hidden")
        if float(message["data"]["PH_value"]) > 14:
            tkinter.messagebox.showinfo('Canh bao', 'Địt mẹ ảo thật đấy!!')
        else:
            # min is 810
            # max is 1020
            # len is 210
            canvas.coords(image_23, 810 + float(((message["data"]["PH_value"] * 210) / 14)), 688)
    else:
        if message["path"] == "/Oxygen":
            if (float(message["data"]) > 7) or (float(message["data"]) < 2):
                canvas.itemconfig(image_11, state="normal")
            else:
                canvas.itemconfig(image_11, state="hidden")
            canvas.itemconfig(data_Oxygen, text=message["data"])
        elif message["path"] == "/PH_value":
            canvas.itemconfig(data_pH, text=message["data"])
            if (float(message["data"]) > 12) or (float(message["data"]) < 3):
                canvas.itemconfig(image_15, state="normal")
            else:
                canvas.itemconfig(image_15, state="hidden")
            if float(message["data"] > 14):
                tkinter.messagebox.showinfo('Canh bao', 'Địt mẹ ảo thật đấy!!')
            else:
                canvas.coords(image_23, 810 + float(((message["data"] * 210) / 14)), 688)
        elif message["path"] == "/Quality":
            canvas.itemconfig(data_Quality, text=message["data"])
            if (float(message["data"]) < 20) or (float(message["data"]) > 80):
                canvas.itemconfig(image_12, state="normal")
            else:
                canvas.itemconfig(image_12, state="hidden")
        else:
            print(message["data"])


db.child("Data").stream(stream_handler)
window = Tk()

window.geometry("1153x939")
window.configure(bg="#FFFFFF")

canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=939,
    width=1153,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    576.0,
    47.0,
    image=image_image_1
)

canvas.create_text(
    461.0,
    4.0,
    anchor="nw",
    text="IOT LAB ",
    fill="#F9DBBB",
    font=("Inter Bold", 64 * -1)
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    238.0,
    345.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    238.0,
    664.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    576.0,
    345.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    576.0,
    664.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    915.0,
    345.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    915.0,
    664.0,
    image=image_image_7
)

imageAirPumpOn = PhotoImage(file=relative_to_assets("airPumpOn.png"))
imageAirPumpOff = PhotoImage(file=relative_to_assets("airPumpOff.png"))
imagePurifiedWaterOn = PhotoImage(file=relative_to_assets("purifiedWaterOn.png"))
imagePurifiedWaterOff = PhotoImage(file=relative_to_assets("purifiedWaterOff.png"))
imageWaveFormingOn = PhotoImage(file=relative_to_assets("waveFormingOn.png"))
imageWaveFormingOff = PhotoImage(file=relative_to_assets("waveFormingOff.png"))
image_image_11 = PhotoImage(file=relative_to_assets("image_11.png"))
image_19 = canvas.create_image(
    237.0,
    340.0,
    image=imageAirPumpOn
)
image_20 = canvas.create_image(
    577.0,
    345.0,
    image=imageWaveFormingOn
)
image_21 = canvas.create_image(
    916.0,
    338.0,
    image=imagePurifiedWaterOn
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    238.0,
    227.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    237.0,
    694.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    575.0,
    694.0,
    image=image_image_10
)

data_Oxygen = canvas.create_text(
    232.0,
    632.0,
    anchor="center",
    text="Loading",
    fill="#FF0000",
    font=("Inter Bold", 50 * -1)
)

data_Quality = canvas.create_text(
    570.0,
    632.0,
    anchor="center",
    text="Loading",
    fill="#FF0000",
    font=("Inter Bold", 50 * -1)
)

image_11 = canvas.create_image(
    238.0,
    755.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    577.0,
    755.0,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    238.0,
    560.0,
    image=image_image_13
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    576.0,
    560.0,
    image=image_image_14
)

data_pH = canvas.create_text(
    915.0,
    632.0,
    anchor="center",
    text="Loading",
    fill="#FF0000",
    font=("Inter Bold", 50 * -1)
)

canvas.create_text(
    801.0,
    707.0,
    anchor="nw",
    text="0",
    fill="#183A1D",
    font=("Inter Regular", 10 * -1)
)

canvas.create_text(
    1011.0,
    707.0,
    anchor="nw",
    text="14",
    fill="#183A1D",
    font=("Inter Regular", 10 * -1)
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    916.0,
    755.0,
    image=image_image_15
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    915.0,
    560.0,
    image=image_image_16
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    576.0,
    225.0,
    image=image_image_17
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    915.0,
    227.0,
    image=image_image_18
)


# here for the function for the button 
def buttonAirPumpOffClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V0=0')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned off - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn off devices')
        return
    canvas.itemconfig(image_19, image=imageAirPumpOff)


def buttonAirPumpOnClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V0=1')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned on - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn on devices')
        return
    canvas.itemconfig(image_19, image=imageAirPumpOn)


def buttonWaveFormingOffClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V1=0')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned off - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn off devices')
        return
    canvas.itemconfig(image_20, image=imageWaveFormingOff)


def buttonWaveFormingOnClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V1=1')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned on - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn on devices')
        return
    canvas.itemconfig(image_20, image=imageWaveFormingOn)


def buttonPurifiedWaterOffClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V2=0')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned off - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn off devices')
        return
    canvas.itemconfig(image_21, image=imagePurifiedWaterOff)


def buttonPurifiedWaterOnClick(needMessage=True):
    code = requests.get('https://blynk.cloud/external/api/batch/update?token=Fqb4YaAJqU794tRTxXO0paLVdznjV6lN&V2=1')
    if code.status_code == 200 and needMessage:
        tkinter.messagebox.showinfo('Success', 'Turned on - Click ok to continue')
    if code.status_code != 200:
        tkinter.messagebox.showerror('Error', 'Can not turn on devices')
        return
    canvas.itemconfig(image_21, image=imagePurifiedWaterOn)


def turnOffAllClick(check_restart=False):
    buttonAirPumpOffClick(False)
    buttonWaveFormingOffClick(False)
    buttonPurifiedWaterOffClick(False)
    if not check_restart:
        tkinter.messagebox.showinfo('Success', 'Turned all devies off - Click ok to continue')


def turnOnAllClick(check_restart=False):
    buttonAirPumpOnClick(False)
    buttonWaveFormingOnClick(False)
    buttonPurifiedWaterOnClick(False)
    if not check_restart:
        tkinter.messagebox.showinfo('Success', 'Turned all devies on - Click ok to continue')


def restartAllClick():
    turnOffAllClick(True)
    canvas.after(1000, lambda: [turnOnAllClick(True), tkinter.messagebox.showinfo('Thành công', 'Restart thành công')])


button_image_1 = PhotoImage(
    file=relative_to_assets("buttonAirPumpOn.png"))
buttonAirPumpOn = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=buttonAirPumpOnClick,
    relief="flat"
)
buttonAirPumpOn.place(
    x=153.0,
    y=438.0,
    width=71.0,
    height=31.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("buttonWaveFormingOn.png"))
buttonWaveFormingOn = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=buttonWaveFormingOnClick,
    relief="flat"
)
buttonWaveFormingOn.place(
    x=490.0,
    y=438.0,
    width=71.0,
    height=31.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("buttonPurifiedWaterOn.png"))
buttonPurifiedWaterOn = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=buttonPurifiedWaterOnClick,
    relief="flat"
)
buttonPurifiedWaterOn.place(
    x=830.0,
    y=438.0,
    width=71.0,
    height=31.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("buttonAirPumpOff.png"))
buttonAirPumpOff = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=buttonAirPumpOffClick,
    relief="flat"
)
buttonAirPumpOff.place(
    x=253.0,
    y=438.0,
    width=71.0,
    height=31.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("buttonWaveFormingOff.png"))
buttonWaveFormingOff = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=buttonWaveFormingOffClick,
    relief="flat"
)
buttonWaveFormingOff.place(
    x=590.0,
    y=438.0,
    width=71.0,
    height=31.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("buttonPurifiedWaterOff.png"))
buttonPurifiedWaterOff = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=buttonPurifiedWaterOffClick,
    relief="flat"
)
buttonPurifiedWaterOff.place(
    x=930.0,
    y=438.0,
    width=71.0,
    height=31.0
)

canvas.create_rectangle(
    0.0,
    94.0,
    1153.0,
    164.0,
    fill="#D9D9D9",
    outline="")

button_image_7 = PhotoImage(
    file=relative_to_assets("buttonTurnOnAll.png"))
buttonTurnOnAll = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=turnOnAllClick,
    relief="flat"
)
buttonTurnOnAll.place(
    x=467.0,
    y=94.0,
    width=208.0,
    height=70.0
)

button_image_8 = PhotoImage(
    file=relative_to_assets("buttonRestartAll.png"))
buttonRestartAll = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=restartAllClick,
    relief="flat"
)
buttonRestartAll.place(
    x=812.0,
    y=94.0,
    width=208.0,
    height=70.0
)

canvas.create_rectangle(
    1.0,
    845.0,
    1155.0,
    939.0,
    fill="#B9F3E4",
    outline="")

canvas.create_text(
    141.0,
    858.0,
    anchor="nw",
    text="Made by: Phan Minh Nhật - Mai Hồng Phong - Trần Tuấn Kiệt",
    fill="#000000",
    font=("Inter Medium", 30 * -1)
)

canvas.create_text(
    141.0,
    897.0,
    anchor="nw",
    text="                  20119147               20119192                20119009",
    fill="#000000",
    font=("Inter Medium", 30 * -1)
)

image_image_22 = PhotoImage(
    file=relative_to_assets("image_22.png"))
image_22 = canvas.create_image(
    915.0,
    687.0,
    image=image_image_22
)

image_image_23 = PhotoImage(
    file=relative_to_assets("image_23.png"))
image_23 = canvas.create_image(
    954.0,
    688.0,
    image=image_image_23
)

button_image_9 = PhotoImage(
    file=relative_to_assets("buttonTurnOffAll.png"))
buttonTurnOffAll = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=turnOffAllClick,
    relief="flat"
)
buttonTurnOffAll.place(
    x=122.0,
    y=94.0,
    width=208.0,
    height=70.0
)

window.resizable(False, False)
window.title("IOT Aquarium")
window.mainloop()
